{"remainingRequest":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/babel-loader/lib/index.js!/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/EditMain.vue?vue&type=template&id=2e886568&scoped=true","dependencies":[{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/EditMain.vue","mtime":1630411766909},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1628298225000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi0yZTg4NjU2OCIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgaWQ6ICJtYWluIgp9OwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCBmdW5jdGlvbiByZW5kZXIoX2N0eCwgX2NhY2hlLCAkcHJvcHMsICRzZXR1cCwgJGRhdGEsICRvcHRpb25zKSB7CiAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUVsZW1lbnRCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSk7Cn0="},{"version":3,"sources":["/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/EditMain.vue"],"names":[],"mappings":";;;;;AACO,EAAA,EAAE,EAAC;;;;;;uBAAR,mBAAA,CAAqB,KAArB,EAAA,UAAA,C","sourcesContent":["<template>\n  <div id=\"main\"></div>\n</template>\n\n<script>\nimport { cahrtTemplate } from '../../common/chart/chart'\nimport * as echarts from 'echarts';\nimport { useStore } from 'vuex';\nimport { onMounted, watch } from '@vue/runtime-core';\nimport essos from '../../assets/json/theme/essos.json';import infographic from '../../assets/json/theme/infographic.json';import macarons from '../../assets/json/theme/macarons.json';import roma from '../../assets/json/theme/roma.json';import vintage from '../../assets/json/theme/vintage.json';import walden from '../../assets/json/theme/walden.json';import westeros from '../../assets/json/theme/westeros.json';import wonderland from '../../assets/json/theme/wonderland.json';import chalk from '../../assets/json/theme/chalk.json';import purplePassion from '../../assets/json/theme/purple-passion.json'\n\n\nexport default {\n  components: {  },\n  setup() {\n    const store = useStore()\n    let chartDom,preChart\n    echarts.registerTheme('essos',essos);echarts.registerTheme('westeros',westeros);echarts.registerTheme('vintage',vintage);echarts.registerTheme('infographic',infographic);echarts.registerTheme('macarons',macarons);echarts.registerTheme('roma',roma);echarts.registerTheme('walden',walden);echarts.registerTheme('wonderland',wonderland);echarts.registerTheme('chalk',chalk);echarts.registerTheme('purple-passion',purplePassion)\n    \n    /**\n     * 监听初始类型\n     */\n    onMounted(()=>{\n      if(document.getElementById('main'))\n        {\n            chartDom = document.getElementById('main')\n            preChart = echarts.init(chartDom,'westeros');\n            preChart.setOption(cahrtTemplate[store.state.preChartType])\n            store.state.myChart = preChart\n        }\n    })\n    /**\n     *监听主题\n     */\n    watch(\n      ()=>store.state.theme,\n      ()=>{\n            preChart.dispose()\n            preChart = echarts.init(chartDom,store.state.theme)\n            preChart.setOption(cahrtTemplate[store.state.preChartType])\n            store.state.myChart = preChart\n    })\n\n\n    /**\n     * 监听类型变换\n     */\n    watch(()=>cahrtTemplate[store.state.preChartType].series[0].type\n    ,()=>{\n      preChart.setOption(cahrtTemplate[store.state.preChartType])\n      store.state.myChart = preChart\n    })\n    \n    watch(()=>cahrtTemplate[store.state.preChartType].series[0].areaStyle\n    ,()=>{\n      preChart.setOption(cahrtTemplate[store.state.preChartType])\n      store.state.myChart = preChart\n    })\n    \n    watch(()=>cahrtTemplate[store.state.preChartType].series[0].stack\n    ,()=>{\n      preChart.setOption(cahrtTemplate[store.state.preChartType])\n      store.state.myChart = preChart\n    })\n\n    watch(()=>cahrtTemplate[store.state.preChartType].series[0].symbolSize\n    ,()=>{\n      if(cahrtTemplate[store.state.preChartType].series[0].type === 'scatter')\n      preChart.setOption(cahrtTemplate[store.state.preChartType])\n      store.state.myChart = preChart\n    })\n\n    watch(()=>cahrtTemplate[store.state.preChartType].series[0].radius\n    ,()=>{\n      if(cahrtTemplate[store.state.preChartType].series[0].type === 'pie')\n      preChart.setOption(cahrtTemplate[store.state.preChartType])\n      store.state.myChart = preChart\n    })\n\n\n\n    if(store.state.preChartType === 'line'|| store.state.preChartType === 'bar'){\n      watch(()=>cahrtTemplate[store.state.preChartType].title.text,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      watch(()=>cahrtTemplate[store.state.preChartType].xAxis.name,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      watch(()=>cahrtTemplate[store.state.preChartType].yAxis.name,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      /**\n       * 修改列数\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].xAxis.data.length,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      /**\n       * 修改行数\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series.length,\n      (v1,v2)=>{\n        if(v1<v2)\n        preChart.dispose(),preChart = echarts.init(chartDom,store.state.theme)//行数减少时需要重新挂载，不然图像不会变化\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n       * 修改数据\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series[0].data,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      \n      /**\n       * 修改行的标题，暂时用修改全局变量act来判断是否修改了\n       */\n      watch(()=>store.state.act,()=>{\n        console.log(store.state.act)\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n    }\n    if(store.state.preChartType === 'scatter') {\n      /**\n       * 修改Title\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].title.text,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      /**\n       * 修改列数\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series[0].data.length,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n       * 修改行数\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series.length,\n      (v1,v2)=>{\n        if(v1<v2)\n        preChart.dispose(),preChart = echarts.init(chartDom,store.state.theme)//行数减少时需要重新挂载，不然图像不会变化\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n       * 修改行的标题，暂时用修改全局变量act来判断是否修改了\n       */\n      watch(()=>store.state.act,()=>{\n        console.log(store.state.act)\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n      * x,y轴的数据更改\n      */\n      watch(()=>cahrtTemplate[store.state.preChartType].xAxis.name,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      watch(()=>cahrtTemplate[store.state.preChartType].yAxis.name,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n       * 修改数据\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series[0].data,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      }\n    if(store.state.preChartType === 'pie') {\n      /**\n       * 修改Title\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].title.text,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n      /**\n       * 数据集删除或增加\n       */\n      watch(()=>cahrtTemplate[store.state.preChartType].series[0].data.length,\n      ()=>{\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n\n      /**\n       * 标题和数据改变,暂时用修改全局变量act来判断是否修改了\n       */\n      watch(()=>store.state.act,()=>{\n        console.log(store.state.act)\n        preChart.setOption(cahrtTemplate[store.state.preChartType])\n        store.state.myChart = preChart\n      })\n    }\n\n    return{\n\n    }\n\n\n  }\n}\n</script>\n\n<style lang = \"less\" scoped> \n  #main {\n    box-sizing: border-box;\n    height: 100%;\n    width: 100%;\n  }\n</style>"],"sourceRoot":""}]}