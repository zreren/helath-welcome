{"remainingRequest":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/ChartType.vue?vue&type=style&index=0&id=0d8491fa&lang=less&scoped=true","dependencies":[{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/ChartType.vue","mtime":1633361879773},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1628298225000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1628298225000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:IAoKICAucCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgcGFkZGluZzowIDE1cHg7CiAgICBtYXJnaW4tdG9wOiAzMnB4OwogICAgaW1nIHsKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDJweCk7CiAgICB9CiAgfQogIC5ib3ggewogICAgbWFyZ2luLXRvcDogMTBweDsKICAgIHdpZHRoOiA5MCU7CiAgICB0cmFuc2l0aW9uOiAwLjVzOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgYm9yZGVyLXJhZGl1czogNXB4OwogICAgYm94LXNoYWRvdzogMXB4IDFweCA2cHggM3B4IHJnYmEoMCwgMCwgMCwgLjMpOwogIH0KICAuYm94OmhvdmVyIHsKICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7CiAgfQogIC5lbC1kaXZpZGVyLS1ob3Jpem9udGFsIHsKICAgIG1hcmdpbjogMTFweCAwOwogIH0K"},{"version":3,"sources":["/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/ChartType.vue"],"names":[],"mappings":";;EA8JE,CAAC,EAAE;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,EAAE;MACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF;EACA,CAAC,CAAC,CAAC,EAAE;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/C;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;EAChB","file":"/Users/lincheng/Documents/字节青训营项目数据可视化/wechart/src/components/Edit/ChartType.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class=\"p\">\n    <div>折线图</div>\n    <el-popover placement=\"right\" title=\"line\" :width=\"300\" trigger=\"hover\" content=\"线图常用来观察资料在一段时间之内的变化（时间序列），因此其X轴为时间，这种折线图又称为趋势图。\">\n    <template #reference>\n      <div>\n      <img style=\"width:18px;\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/6bbe2504e5fe9f5f_1630074484510.png\" alt=\"\" srcset=\"\">\n      </div>\n    </template>\n    </el-popover>\n   </div> \n   <el-divider></el-divider>\n   <img class=\"box\" @click=\"changeType('line')\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/d8c7500afbc28dff_1629997461526.png\" alt=\"\">\n   <img class=\"box\" @click=\"addarea()\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/ab8a0479dd66e0e1_1630002625952.png\" alt=\"\">\n   <div class=\"p\">\n     <div>柱状图</div> \n    <el-popover placement=\"right\" title=\"line\" :width=\"300\" trigger=\"hover\" content=\"是一种以长方形的长度为变量的统计图表。柱形图用来比较两个或以上的价值（不同时间或者不同条件）\">\n    <template #reference>\n      <div>\n      <img style=\"width:18px;\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/6bbe2504e5fe9f5f_1630074484510.png\" alt=\"\" srcset=\"\">\n      </div>\n    </template>\n    </el-popover>\n    </div> \n   <el-divider></el-divider>\n   <img class=\"box\" @click=\"changeType('bar')\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/b63a4a4f30d4e597_1630004043524.png\" alt=\"\">\n   <img class=\"box\" @click=\"addStack()\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/a819d49b3fc19d84_1630048437112.png\" alt=\"\">\n   \n   <div class=\"p\">\n     <div>散点图(不建议与其他类型交换)</div> \n     <el-popover placement=\"right\" title=\"line\" :width=\"300\" trigger=\"hover\" content=\"散布图可以推测两个参数中许多不同种类的相关性，配合一定的置信区间。以体重及身高为例，可能会将体重放在y轴，将身高放在x轴。相关性可能是正相关、负相关、无相关性。若散布图有从左下到右上分布的图形，表示两者正相关，若散布图有从左上到右下分布的图形，表示两者负相关。\">\n    <template #reference>\n      <div>\n      <img style=\"width:18px;\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/6bbe2504e5fe9f5f_1630074484510.png\" alt=\"\" srcset=\"\">\n      </div>\n    </template>\n    </el-popover>\n     </div> \n   <el-divider></el-divider>\n   <img class=\"box\" @click=\"changeType('scatter')\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/0776ceba190eb4de_1630050870509.png\" alt=\"\">\n   <img class=\"box\" @click=\"changeSize()\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/421fa5087349c439_1630053107172.png\" alt=\"\">\n\n    <div class=\"p\">\n    <div>饼图(不建议与其他类型交换)</div>\n    <el-popover placement=\"right\" title=\"line\" :width=\"300\" trigger=\"hover\" content=\"在饼图中的每个数据系列具有唯一的颜色或图案并且在图表的图例中表示，可以很好地帮助用户快速了解数据的占比分配\">\n    <template #reference>\n      <div>\n      <img style=\"width:18px;\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/6bbe2504e5fe9f5f_1630074484510.png\" alt=\"\" srcset=\"\">\n      </div>\n    </template>\n    </el-popover>\n     </div> \n   <el-divider></el-divider>\n   <img class=\"box\" @click=\"changePie('70%')\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/1a787c1712bf1cac_1630055252792.png\" alt=\"\">\n   <img class=\"box\" @click=\"changePie(['30%','70%'])\" src=\"https://sf1-ttcdn-tos.pstatp.com/obj/larkcloud-file-storage/baas/qc5abu/91e025d56fcd5b52_1630055256279.png\" alt=\"\">\n</template>\n\n<script>\nimport { cahrtTemplate }  from '../../common/chart/chart'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nexport default {\n  name:'ChartType',\n  setup() {\n    const store = useStore()\n    function changeType(value) {\n        if((value !== store.state.preChartType) && (value === 'pie' || store.state.preChartType === 'pie' ) )\n          ElMessage.error('目前饼图只能和环形图互换哦')\n        else\n        {\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          {\n            //其他数据是为了初始化\n            cahrtTemplate[store.state.preChartType].xAxis.boundaryGap = true\n            cahrtTemplate[store.state.preChartType].series[item].areaStyle = undefined\n            cahrtTemplate[store.state.preChartType].series[item].stack = undefined\n            cahrtTemplate[store.state.preChartType].series[item].type = value\n          }\n\n          //为scatter添加散点大小\n          if(value === 'scatter')\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          cahrtTemplate[store.state.preChartType].series[item].symbolSize = 20\n          else\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          cahrtTemplate[store.state.preChartType].series[item].symbolSize = undefined\n          \n        }\n    }\n    function addarea() {\n        if(store.state.preChartType === 'pie')\n          ElMessage.error('目前饼图只能和环形图互换哦')\n        else {\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          {\n            cahrtTemplate[store.state.preChartType].series[item].type = 'line'\n            cahrtTemplate[store.state.preChartType].xAxis.boundaryGap = false\n            cahrtTemplate[store.state.preChartType].series[item].areaStyle = {}\n          }\n        }\n    }\n    function addStack() {\n        if(store.state.preChartType === 'pie')\n          ElMessage.error('目前饼图只能和环形图互换哦')\n        else {\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          {\n            cahrtTemplate[store.state.preChartType].series[item].type = 'bar'\n            cahrtTemplate[store.state.preChartType].series[item].stack = 'total'\n          }\n        }\n    }\n    function changeSize() {\n        if(store.state.preChartType === 'pie')\n          ElMessage.error('目前饼图只能和环形图互换哦')\n        else {\n          for(let item in cahrtTemplate[store.state.preChartType].series)\n          {\n            cahrtTemplate[store.state.preChartType].series[item].type = 'scatter'\n            let dataProto = cahrtTemplate[store.state.preChartType].series[0].data[0][1] ? cahrtTemplate[store.state.preChartType].series[0].data[0][1] : cahrtTemplate[store.state.preChartType].series[0].data[0]\n            cahrtTemplate[store.state.preChartType].series[item].symbolSize = function (data) {return data[1] ? data[1]/dataProto*20 : data/dataProto*20}\n          }\n        }\n    }\n    function changePie(value) {\n        if(store.state.preChartType !== 'pie')\n          ElMessage.error('目前饼图只能和环形图互换哦')\n        else {\n        cahrtTemplate[store.state.preChartType].series[0].radius = value\n        if(typeof(value) === 'string'){\n          cahrtTemplate[store.state.preChartType].series[0].itemStyle = {\n                borderRadius: 0,\n                borderColor: '#fff',\n                borderWidth: 0\n        }\n        }\n        \n        else\n        cahrtTemplate[store.state.preChartType].series[0].itemStyle = {\n                borderRadius: 15,\n                borderColor: '#fff',\n                borderWidth: 2\n        }\n        }\n    }\n    return {\n      changeType,\n      addarea,\n      addStack,\n      changeSize,\n      changePie\n    }\n  }\n}\n</script>\n\n<style lang = \"less\" scoped> \n\n  .p {\n    display: flex;\n    justify-content: space-between;\n    padding:0 15px;\n    margin-top: 32px;\n    img {\n      transform: translateY(2px);\n    }\n  }\n  .box {\n    margin-top: 10px;\n    width: 90%;\n    transition: 0.5s;\n    cursor: pointer;\n    border-radius: 5px;\n    box-shadow: 1px 1px 6px 3px rgba(0, 0, 0, .3);\n  }\n  .box:hover {\n    transform: scale(1.05);\n  }\n  .el-divider--horizontal {\n    margin: 11px 0;\n  }\n</style>"]}]}